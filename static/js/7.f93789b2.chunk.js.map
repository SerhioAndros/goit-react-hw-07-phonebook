{"version":3,"sources":["components/views/RegistrationView.js","components/views/RegistrationView.module.css"],"names":["RegistrationView","state","name","email","password","handleChange","target","value","setState","handleSubmit","e","preventDefault","props","onRegister","this","className","styles","wrapper","registrationHeader","form","onSubmit","label","type","onChange","submitBtn","Component","connect","dispatch","data","register","module","exports"],"mappings":"gPAKMA,E,4MACJC,MAAQ,CACNC,KAAM,GACNC,MAAO,GACPC,SAAU,I,EAGZC,aAAe,YAAkC,IAAD,IAA9BC,OAAUJ,EAAoB,EAApBA,KAAMK,EAAc,EAAdA,MAChC,EAAKC,SAAL,eAAiBN,EAAOK,K,EAG1BE,aAAe,SAACC,GACdA,EAAEC,iBAEF,EAAKC,MAAMC,WAAW,EAAKZ,OAC3B,EAAKO,SAAS,CAAEN,KAAM,GAAIC,MAAO,GAAIC,SAAU,M,4CAGjD,WACE,MAAkCU,KAAKb,MAA/BC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MAAOC,EAArB,EAAqBA,SAErB,OACE,sBAAKW,UAAWC,IAAOC,QAAvB,UACE,oBAAIF,UAAWC,IAAOE,mBAAtB,uEAEA,uBAAMH,UAAWC,IAAOG,KAAMC,SAAUN,KAAKL,aAA7C,UACE,wBAAOM,UAAWC,IAAOK,MAAzB,+BAEE,uBACEC,KAAK,OACLpB,KAAK,OACLK,MAAOL,EACPqB,SAAUT,KAAKT,kBAInB,wBAAOU,UAAWC,IAAOK,MAAzB,qCAEE,uBACEC,KAAK,QACLpB,KAAK,QACLK,MAAOJ,EACPoB,SAAUT,KAAKT,kBAInB,wBAAOU,UAAWC,IAAOK,MAAzB,0IAEE,uBACEC,KAAK,WACLpB,KAAK,WACLK,MAAOH,EACPmB,SAAUT,KAAKT,kBAInB,wBAAQU,UAAWC,IAAOQ,UAAWF,KAAK,SAA1C,wE,GAxDqBG,aAqEhBC,sBAAQ,MAJI,SAACC,GAAD,MAAe,CACxCd,WAAY,SAACe,GAAD,OAAUD,EAASE,YAASD,QAG3BF,CAAkC1B,I,mBCzEjD8B,EAAOC,QAAU,CAAC,QAAU,kCAAkC,mBAAqB,6CAA6C,KAAO,+BAA+B,MAAQ,gCAAgC,UAAY","file":"static/js/7.f93789b2.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { register } from \"../../redux/auth/auth-operations\";\r\nimport styles from \"./RegistrationView.module.css\";\r\n\r\nclass RegistrationView extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n  };\r\n\r\n  handleChange = ({ target: { name, value } }) => {\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    this.props.onRegister(this.state);\r\n    this.setState({ name: \"\", email: \"\", password: \"\" });\r\n  };\r\n\r\n  render() {\r\n    const { name, email, password } = this.state;\r\n\r\n    return (\r\n      <div className={styles.wrapper}>\r\n        <h1 className={styles.registrationHeader}>Зарегайся!!!</h1>\r\n\r\n        <form className={styles.form} onSubmit={this.handleSubmit}>\r\n          <label className={styles.label}>\r\n            Ник\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={name}\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n\r\n          <label className={styles.label}>\r\n            Мейл\r\n            <input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              value={email}\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n\r\n          <label className={styles.label}>\r\n            Пароль (никому не говори)\r\n            <input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              value={password}\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n\r\n          <button className={styles.submitBtn} type=\"submit\">\r\n            Зарегать\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onRegister: (data) => dispatch(register(data)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(RegistrationView);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"RegistrationView_wrapper__3VHhv\",\"registrationHeader\":\"RegistrationView_registrationHeader__1j0AT\",\"form\":\"RegistrationView_form__2ZMQc\",\"label\":\"RegistrationView_label__1Fhrp\",\"submitBtn\":\"RegistrationView_submitBtn__2yAJc\"};"],"sourceRoot":""}
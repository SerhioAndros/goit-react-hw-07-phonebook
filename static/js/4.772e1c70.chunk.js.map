{"version":3,"sources":["redux/contacts/contacts-operations.js","redux/contacts/contacts-selectors.js","components/contactForm/ContactForm.js","components/contactList/contactListItem/ContactListItem.js","components/contactList/ContactList.js","components/filter/Filter.js","components/loader/Loader.js","components/views/ContactsView.js","components/views/ContactsView.module.css","components/contactForm/ContactForm.module.css","components/contactList/contactListItem/ContactListItem.module.css","components/contactList/ContactList.module.css","components/filter/Filter.module.css"],"names":["axios","defaults","baseURL","getLoading","state","contacts","loading","getFilter","contactFilter","getContacts","contactItems","getFilteredContacts","createSelector","filter","filterNormilized","toLowerCase","trim","name","includes","ContactForm","number","handleInputChange","evt","currentTarget","value","setState","handleSubmit","preventDefault","props","map","contact","alert","onSubmit","uniqueIdName","uuid","uniqueIdNumber","this","className","styles","addContactForm","htmlFor","addContactFormLabel","addContactFormInput","type","id","pattern","title","required","onChange","placeholder","addContactFormBtn","Component","connect","dispatch","object","addContactRequest","post","then","data","addContactSuccess","catch","error","addContactError","message","addContact","ContactListItem","onDeleteContact","contactItem","contactName","contactNumber","deleteContactBtn","onClick","contactId","deleteContactRequest","delete","deleteContactSuccess","deleteContactError","contactList","filterContacts","target","filterInputLabel","filterInput","ContactsLoader","color","height","width","ContactsView","fetchContacts","container","mainHeader","additionalHeader","loadingContacts","a","fetchContactsRequest","get","fetchContactsSuccess","fetchContactsError","module","exports"],"mappings":"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","file":"static/js/4.772e1c70.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport {\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n} from \"./contacts-actions\";\r\n\r\naxios.defaults.baseURL = \"https://connections-api.herokuapp.com\";\r\n\r\nexport const fetchContacts = () => async (dispatch) => {\r\n  dispatch(fetchContactsRequest());\r\n\r\n  try {\r\n    const { data } = await axios.get(\"/contacts\");\r\n    dispatch(fetchContactsSuccess(data));\r\n  } catch (error) {\r\n    dispatch(fetchContactsError(error.message));\r\n  }\r\n};\r\n\r\nexport const addContact =\r\n  ({ name, number }) =>\r\n  (dispatch) => {\r\n    const contact = { name, number };\r\n\r\n    dispatch(addContactRequest());\r\n\r\n    axios\r\n      .post(\"/contacts\", contact)\r\n      .then(({ data }) => dispatch(addContactSuccess(data)))\r\n      .catch((error) => dispatch(addContactError(error.message)));\r\n  };\r\n\r\nexport const deleteContact = (id) => (dispatch) => {\r\n  dispatch(deleteContactRequest());\r\n\r\n  axios\r\n    .delete(`/contacts/${id}`)\r\n    .then(() => dispatch(deleteContactSuccess(id)))\r\n    .catch((error) => dispatch(deleteContactError(error.message)));\r\n};\r\n","import { createSelector } from \"@reduxjs/toolkit\";\r\n\r\nexport const getLoading = (state) => state.contacts.loading;\r\nexport const getFilter = (state) => state.contacts.contactFilter;\r\nexport const getContacts = (state) => state.contacts.contactItems;\r\n\r\n// составной селектор (для примера)\r\n//\r\n// export const getFilteredContacts = (state) => {\r\n//   const contacts = getContacts(state);\r\n//   const filter = getFilter(state);\r\n//   const filterNormilized = filter.toLowerCase().trim();\r\n//   return contacts.filter(({ name }) =>\r\n//     name.toLowerCase().trim().includes(filterNormilized)\r\n//   );\r\n// };\r\n\r\nexport const getFilteredContacts = createSelector(\r\n  [getContacts, getFilter],\r\n  (contacts, filter) => {\r\n    const filterNormilized = filter.toLowerCase().trim();\r\n    return contacts.filter(({ name }) =>\r\n      name.toLowerCase().trim().includes(filterNormilized)\r\n    );\r\n  }\r\n);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport styles from \"./ContactForm.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { addContact } from \"../../redux/contacts/contacts-operations\";\r\nimport { getContacts } from \"../../redux/contacts/contacts-selectors\";\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleInputChange = (evt) => {\r\n    const { name, value } = evt.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = (evt) => {\r\n    evt.preventDefault();\r\n    const { name, number } = this.state;\r\n    const contacts = this.props.contacts;\r\n    if (!name.trim() || !number.trim())\r\n      return alert(\"You've missed something :)\");\r\n    if (contacts.map((contact) => contact.name).includes(name.trim()))\r\n      return alert(`\"${name.trim()}\" is already in contacts`);\r\n    if (contacts.map((contact) => contact.number).includes(number.trim()))\r\n      return alert(`\"${number.trim()}\" is already in contacts`);\r\n\r\n    this.props.onSubmit(this.state);\r\n    this.setState({\r\n      name: \"\",\r\n      number: \"\",\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const uniqueIdName = uuid();\r\n    const uniqueIdNumber = uuid();\r\n    return (\r\n      <form onSubmit={this.handleSubmit} className={styles.addContactForm}>\r\n        <label htmlFor={uniqueIdName} className={styles.addContactFormLabel}>\r\n          Имя\r\n        </label>\r\n        <input\r\n          className={styles.addContactFormInput}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          id={uniqueIdName}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          value={this.state.name}\r\n          onChange={this.handleInputChange}\r\n          placeholder=\"Имя контакта\"\r\n        />\r\n        <label htmlFor={uniqueIdNumber} className={styles.addContactFormLabel}>\r\n          Телефон\r\n        </label>\r\n        <input\r\n          className={styles.addContactFormInput}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          id={uniqueIdNumber}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          value={this.state.number}\r\n          onChange={this.handleInputChange}\r\n          placeholder=\"Номер контакта\"\r\n        />\r\n\r\n        <button type=\"submit\" className={styles.addContactFormBtn}>\r\n          Запилить\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contacts: getContacts(state),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onSubmit: (object) => dispatch(addContact(object)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./ContactListItem.module.css\";\r\n\r\nconst ContactListItem = ({ id, name, number, onDeleteContact }) => (\r\n  <li className={styles.contactItem}>\r\n    <p className={styles.contactName}>\r\n      {name}: <span className={styles.contactNumber}>{number}</span>\r\n    </p>\r\n    <button\r\n      className={styles.deleteContactBtn}\r\n      type=\"button\"\r\n      onClick={() => onDeleteContact(id)}\r\n    >\r\n      Выпилить\r\n    </button>\r\n  </li>\r\n);\r\n\r\nContactListItem.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactListItem;\r\n","import React from \"react\";\r\nimport ContactListItem from \"./contactListItem/ContactListItem\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./ContactList.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteContact } from \"../../redux/contacts/contacts-operations\";\r\nimport {\r\n  getFilteredContacts,\r\n  getContacts,\r\n} from \"../../redux/contacts/contacts-selectors\";\r\n\r\nconst ContactList = ({ contacts, onClick }) => (\r\n  <ul className={styles.contactList}>\r\n    {contacts.map((contact) => (\r\n      <ContactListItem\r\n        key={contact.id}\r\n        id={contact.id}\r\n        name={contact.name}\r\n        number={contact.number}\r\n        onDeleteContact={onClick}\r\n      />\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }).isRequired\r\n  ).isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  if (!getFilteredContacts(state)) {\r\n    return {\r\n      contacts: getContacts(state),\r\n    };\r\n  }\r\n  return { contacts: getFilteredContacts(state) };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onClick: (contactId) => dispatch(deleteContact(contactId)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import React from \"react\";\r\nimport styles from \"./Filter.module.css\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { filterContacts } from \"../../redux/contacts/contacts-actions\";\r\nimport { getFilter } from \"../../redux/contacts/contacts-selectors\";\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n  <>\r\n    <label className={styles.filterInputLabel}>Кого же найти?</label>\r\n    <input\r\n      className={styles.filterInput}\r\n      type=\"text\"\r\n      name=\"filter\"\r\n      value={value}\r\n      onChange={onChange}\r\n      placeholder=\"По имени\"\r\n    />\r\n  </>\r\n);\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  value: getFilter(state),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onChange: (evt) => dispatch(filterContacts(evt.target.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import Loader from \"react-loader-spinner\";\r\n\r\nexport const ContactsLoader = () => {\r\n  return <Loader type=\"ThreeDots\" color=\"#00BFFF\" height={80} width={80} />;\r\n};\r\n","import styles from \"./ContactsView.module.css\";\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport ContactForm from \"../contactForm/ContactForm\";\r\nimport ContactList from \"../contactList/ContactList\";\r\nimport Filter from \"../filter/Filter\";\r\nimport { fetchContacts } from \"../../redux/contacts/contacts-operations\";\r\nimport { getLoading } from \"../../redux/contacts/contacts-selectors\";\r\nimport { ContactsLoader } from \"../loader/Loader\";\r\n\r\nclass ContactsView extends Component {\r\n  state = {};\r\n  componentDidMount() {\r\n    this.props.fetchContacts();\r\n  }\r\n  render() {\r\n    return (\r\n      <div className={styles.container}>\r\n        <h1 className={styles.mainHeader}>Фоно-бук</h1>\r\n        <ContactForm />\r\n        <h2 className={styles.additionalHeader}>Контактики</h2>\r\n\r\n        <Filter />\r\n        {this.props.loadingContacts && <ContactsLoader />}\r\n        <ContactList />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  loadingContacts: getLoading(state),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  fetchContacts: () => dispatch(fetchContacts()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsView);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ContactsView_container__3Tu_X\",\"mainHeader\":\"ContactsView_mainHeader__3Zrme\",\"additionalHeader\":\"ContactsView_additionalHeader__19B4m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addContactForm\":\"ContactForm_addContactForm__2_S8Q\",\"addContactFormLabel\":\"ContactForm_addContactFormLabel__2vo63\",\"addContactFormInput\":\"ContactForm_addContactFormInput__1wVHm\",\"addContactFormBtn\":\"ContactForm_addContactFormBtn__K9r13\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactItem\":\"ContactListItem_contactItem__1gs1_\",\"contactName\":\"ContactListItem_contactName__axNUW\",\"contactNumber\":\"ContactListItem_contactNumber__1XHIp\",\"deleteContactBtn\":\"ContactListItem_deleteContactBtn__2hcPR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__BcwIw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterInputLabel\":\"Filter_filterInputLabel__3jT--\",\"filterInput\":\"Filter_filterInput__1_crZ\"};"],"sourceRoot":""}
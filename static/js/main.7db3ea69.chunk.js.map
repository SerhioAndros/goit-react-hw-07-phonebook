{"version":3,"sources":["redux/contacts/contacts-actions.js","components/appBar/UserMenu.module.css","redux/auth/auth-operations.js","redux/auth/auth-actions.js","components/appBar/AppBar.module.css","components/App.module.css","redux/contacts/contacts-reducer.js","redux/auth/auth-reducer.js","redux/store.js","redux/auth/auth-selector.js","components/appBar/Navigation.js","components/appBar/UserMenu.js","components/appBar/AuthNav.js","components/appBar/AppBar.js","components/routs/PublicRoute.js","components/routs/PrivateRoute.js","components/App.js","index.js"],"names":["fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","filterContacts","module","exports","axios","defaults","baseURL","token","headers","common","Authorization","register","credentials","dispatch","a","registerRequest","post","response","data","registerSuccess","registerError","message","login","loginRequest","loginSuccess","loginError","getCurrUser","getState","persistedToken","auth","getCurrUserRequest","get","console","log","getCurrUserSuccess","getCurrUserError","logout","logoutRequest","logoutSuccess","logoutError","contactItems","createReducer","_","payload","state","filter","id","contactFilter","loading","combineReducers","initialState","name","email","user","setError","error","isAuthed","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","contacts","contactsReducer","persistReducer","authReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","exportedData","persistor","persistStore","getIsAuthenticated","getUserName","styles","link","display","textDecoration","padding","fontWeight","fontSize","color","activeLink","connect","isAuthenticated","exact","to","style","activeStyle","avatar","onLogout","className","container","src","alt","width","userName","type","onClick","logoutBtn","AuthNav","header","Component","component","redirectTo","restricted","routeProps","render","props","HomeView","lazy","RegistrationView","LoginView","ContactsView","App","this","onRefresh","fallback","loader","path","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7db3ea69.chunk.js","sourcesContent":["import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const fetchContactsRequest = createAction(\r\n  \"contacts/fetchContactRequest\"\r\n);\r\nexport const fetchContactsSuccess = createAction(\r\n  \"contacts/fetchContactSuccess\"\r\n);\r\nexport const fetchContactsError = createAction(\"contacts/fetchContactError\");\r\n\r\nexport const addContactRequest = createAction(\"contacts/addContactRequest\");\r\nexport const addContactSuccess = createAction(\"contacts/addContactSuccess\");\r\nexport const addContactError = createAction(\"contacts/addContactError\");\r\n\r\nexport const deleteContactRequest = createAction(\r\n  \"contacts/deleteContactRequest\"\r\n);\r\nexport const deleteContactSuccess = createAction(\r\n  \"contacts/deleteContactSuccess\"\r\n);\r\nexport const deleteContactError = createAction(\"contacts/deleteContactError\");\r\n\r\nexport const filterContacts = createAction(\"contacts/filterContacts\");\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"UserMenu_container__d0EdU\",\"avatar\":\"UserMenu_avatar__vXnvH\",\"name\":\"UserMenu_name__2mtnI\",\"userName\":\"UserMenu_userName__INTpr\",\"logoutBtn\":\"UserMenu_logoutBtn__2Zb8a\"};","import axios from \"axios\";\r\n\r\nimport {\r\n  registerRequest,\r\n  registerSuccess,\r\n  registerError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  loginError,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  logoutError,\r\n  getCurrUserRequest,\r\n  getCurrUserSuccess,\r\n  getCurrUserError,\r\n} from \"./auth-actions\";\r\n\r\naxios.defaults.baseURL = \"https://connections-api.herokuapp.com\";\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = \"\";\r\n  },\r\n};\r\n\r\nexport const register = (credentials) => async (dispatch) => {\r\n  dispatch(registerRequest());\r\n\r\n  try {\r\n    const response = await axios.post(\"/users/signup\", credentials);\r\n\r\n    token.set(response.data.token);\r\n    dispatch(registerSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(registerError(error.message));\r\n  }\r\n};\r\n\r\nexport const login = (credentials) => async (dispatch) => {\r\n  dispatch(loginRequest());\r\n\r\n  try {\r\n    const response = await axios.post(\"/users/login\", credentials);\r\n\r\n    token.set(response.data.token);\r\n    dispatch(loginSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(loginError(error.message));\r\n  }\r\n};\r\n\r\nexport const getCurrUser = () => async (dispatch, getState) => {\r\n  const {\r\n    auth: { token: persistedToken },\r\n  } = getState();\r\n\r\n  if (!persistedToken) {\r\n    return;\r\n  }\r\n\r\n  token.set(persistedToken);\r\n\r\n  dispatch(getCurrUserRequest());\r\n\r\n  try {\r\n    const response = await axios.get(\"/users/current\");\r\n    console.log(response.data);\r\n    dispatch(getCurrUserSuccess(response.data));\r\n  } catch (error) {\r\n    dispatch(getCurrUserError(error.message));\r\n  }\r\n};\r\n\r\nexport const logout = () => async (dispatch) => {\r\n  dispatch(logoutRequest());\r\n\r\n  try {\r\n    await axios.post(\"/users/logout\");\r\n\r\n    token.unset();\r\n    dispatch(logoutSuccess());\r\n  } catch (error) {\r\n    dispatch(logoutError(error.message));\r\n  }\r\n};\r\n","import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const registerRequest = createAction(\"auth/registerRequest\");\r\nexport const registerSuccess = createAction(\"auth/registerSuccess\");\r\nexport const registerError = createAction(\"auth/registerError\");\r\n\r\nexport const loginRequest = createAction(\"auth/loginRequest\");\r\nexport const loginSuccess = createAction(\"auth/loginSuccess\");\r\nexport const loginError = createAction(\"auth/loginError\");\r\n\r\nexport const logoutRequest = createAction(\"auth/logoutRequest\");\r\nexport const logoutSuccess = createAction(\"auth/logoutSuccess\");\r\nexport const logoutError = createAction(\"auth/logoutError\");\r\n\r\nexport const getCurrUserRequest = createAction(\"auth/getCurrUserRequest\");\r\nexport const getCurrUserSuccess = createAction(\"auth/getCurrUserSuccess\");\r\nexport const getCurrUserError = createAction(\"auth/getCurrUserError\");\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"AppBar_header__7_Kb1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"App_loader__2tFGB\"};","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\n\r\nimport {\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  filterContacts,\r\n} from \"./contacts-actions\";\r\n\r\nconst contactItems = createReducer([], {\r\n  [fetchContactsSuccess]: (_, { payload }) => payload,\r\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n  [deleteContactSuccess]: (state, { payload }) =>\r\n    state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst contactFilter = createReducer(\"\", {\r\n  [filterContacts]: (_, { payload }) => payload,\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [fetchContactsRequest]: () => true,\r\n  [fetchContactsSuccess]: () => false,\r\n  [fetchContactsError]: () => false,\r\n\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactSuccess]: () => false,\r\n  [deleteContactError]: () => false,\r\n});\r\n\r\nexport default combineReducers({ contactItems, contactFilter, loading });\r\n","import { combineReducers } from \"redux\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\n\r\nimport {\r\n  // registerRequest,\r\n  registerSuccess,\r\n  registerError,\r\n  // loginRequest,\r\n  loginSuccess,\r\n  loginError,\r\n  // logoutRequest,\r\n  logoutSuccess,\r\n  logoutError,\r\n  // getCurrUserRequest,\r\n  getCurrUserSuccess,\r\n  getCurrUserError,\r\n} from \"./auth-actions\";\r\n\r\nconst initialState = { name: null, email: null };\r\n\r\nconst user = createReducer(initialState, {\r\n  [registerSuccess]: (_, { payload }) => payload.user,\r\n  [loginSuccess]: (_, { payload }) => payload.user,\r\n  [getCurrUserSuccess]: (_, { payload }) => payload,\r\n  [logoutSuccess]: () => initialState,\r\n});\r\n\r\nconst token = createReducer(null, {\r\n  [registerSuccess]: (_, { payload }) => payload.token,\r\n  [loginSuccess]: (_, { payload }) => payload.token,\r\n  [logoutSuccess]: () => null,\r\n});\r\n\r\nconst setError = (_, { payload }) => payload;\r\nconst error = createReducer(null, {\r\n  [registerError]: setError,\r\n  [loginError]: setError,\r\n  [getCurrUserError]: setError,\r\n  [logoutError]: setError,\r\n});\r\n\r\nconst isAuthed = createReducer(false, {\r\n  [registerSuccess]: () => true,\r\n  [loginSuccess]: () => true,\r\n  [getCurrUserSuccess]: () => true,\r\n  [registerError]: () => false,\r\n  [loginError]: () => false,\r\n  [getCurrUserError]: () => false,\r\n  [logoutSuccess]: () => false,\r\n});\r\n\r\n// const loading = createReducer(null, {\r\n//   [registerRequest]: () => true,\r\n//   [registerSuccess]: () => false,\r\n//   [registerError]: () => false,\r\n//   [loginRequest]: () => true,\r\n//   [loginSuccess]: () => false,\r\n//   [loginError]: () => false,\r\n//   [logoutRequest]: () => true,\r\n//   [logoutSuccess]: () => false,\r\n//   [logoutError]: () => false,\r\n// });\r\n\r\nexport default combineReducers({ user, token, error, isAuthed });\r\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\n\r\nimport contactsReducer from \"./contacts/contacts-reducer\";\r\nimport authReducer from \"./auth/auth-reducer\";\r\n\r\nconst authPersistConfig = {\r\n  key: \"authToken\",\r\n  storage,\r\n  whitelist: [\"token\"],\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: contactsReducer,\r\n    auth: persistReducer(authPersistConfig, authReducer),\r\n  },\r\n  middleware: getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nconst exportedData = { store, persistor };\r\n\r\nexport default exportedData;\r\n","export const getIsAuthenticated = (state) => state.auth.isAuthed;\r\n\r\nexport const getUserName = (state) => state.auth.user.name;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { getIsAuthenticated } from \"../../redux/auth/auth-selector\";\r\n\r\nconst styles = {\r\n  link: {\r\n    display: \"inline-block\",\r\n    textDecoration: \"none\",\r\n    padding: 12,\r\n    fontWeight: 700,\r\n    fontSize: 21,\r\n    color: \"#2A363B\",\r\n  },\r\n  activeLink: {\r\n    color: \"rgb(89, 89, 199)\",\r\n  },\r\n};\r\n\r\nconst Navigation = ({ isAuthenticated }) => (\r\n  <nav>\r\n    <NavLink exact to=\"/\" style={styles.link} activeStyle={styles.activeLink}>\r\n      На главную!\r\n    </NavLink>\r\n    {isAuthenticated && (\r\n      <NavLink\r\n        exact\r\n        to=\"/contacts\"\r\n        style={styles.link}\r\n        activeStyle={styles.activeLink}\r\n      >\r\n        Контактики\r\n      </NavLink>\r\n    )}\r\n  </nav>\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(Navigation);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { logout } from \"../../redux/auth/auth-operations\";\r\nimport { getUserName } from \"../../redux/auth/auth-selector\";\r\nimport styles from \"./UserMenu.module.css\";\r\n\r\nconst defaultAvatar =\r\n  \"https://cdn.pixabay.com/photo/2016/12/13/16/17/dancer-1904467_960_720.png\";\r\n\r\nconst UserMenu = ({ avatar, name, onLogout }) => (\r\n  <div className={styles.container}>\r\n    <img src={avatar} alt=\"\" width=\"45\" className={styles.avatar} />\r\n    <span className={styles.name}>\r\n      Вечер в хату, <span className={styles.userName}>{name}</span>\r\n    </span>\r\n    <button type=\"button\" onClick={onLogout} className={styles.logoutBtn}>\r\n      Сваливаем...\r\n    </button>\r\n  </div>\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n  name: getUserName(state),\r\n  avatar: defaultAvatar,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onLogout: (data) => dispatch(logout(data)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserMenu);\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst styles = {\r\n  link: {\r\n    display: \"inline-block\",\r\n    textDecoration: \"none\",\r\n    padding: 12,\r\n    fontWeight: 700,\r\n    fontSize: 21,\r\n    color: \"#2A363B\",\r\n  },\r\n  activeLink: {\r\n    color: \"rgb(89, 89, 199)\",\r\n  },\r\n};\r\n\r\nconst AuthNav = () => (\r\n  <div>\r\n    <NavLink\r\n      to=\"/register\"\r\n      exact\r\n      style={styles.link}\r\n      activeStyle={styles.activeLink}\r\n    >\r\n      Зарегаться\r\n    </NavLink>\r\n    <NavLink\r\n      to=\"/login\"\r\n      exact\r\n      style={styles.link}\r\n      activeStyle={styles.activeLink}\r\n    >\r\n      Залогиниться\r\n    </NavLink>\r\n  </div>\r\n);\r\n\r\nexport default AuthNav;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport styles from \"./AppBar.module.css\";\r\nimport Navigation from \"./Navigation\";\r\nimport UserMenu from \"./UserMenu\";\r\nimport AuthNav from \"./AuthNav\";\r\nimport { getIsAuthenticated } from \"../../redux/auth/auth-selector\";\r\n\r\nconst AppBar = ({ isAuthenticated }) => (\r\n  <header className={styles.header}>\r\n    <Navigation />\r\n    {isAuthenticated ? <UserMenu /> : <AuthNav />}\r\n  </header>\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps, null)(AppBar);\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { getIsAuthenticated } from \"../../redux/auth/auth-selector\";\r\n\r\nconst PublicRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  redirectTo,\r\n  restricted,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={(props) =>\r\n      isAuthenticated && restricted ? (\r\n        <Redirect to={redirectTo} />\r\n      ) : (\r\n        <Component {...props} />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PublicRoute);\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { getIsAuthenticated } from \"../../redux/auth/auth-selector\";\r\n\r\nconst PrivateRoute = ({\r\n  component: Component,\r\n  isAuthenticated,\r\n  redirectTo,\r\n  ...routeProps\r\n}) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={(props) =>\r\n      isAuthenticated ? <Component {...props} /> : <Redirect to={redirectTo} />\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import React, { Component, Suspense, lazy } from \"react\";\r\nimport { Switch } from \"react-router-dom\";\r\nimport AppBar from \"./appBar/AppBar\";\r\nimport { connect } from \"react-redux\";\r\nimport { getCurrUser } from \"../redux/auth/auth-operations\";\r\nimport PublicRoute from \"./routs/PublicRoute\";\r\nimport PrivateRoute from \"./routs/PrivateRoute\";\r\nimport styles from \"./App.module.css\";\r\n\r\n\r\nconst HomeView = lazy(() => import(\"./views/HomeView\"));\r\nconst RegistrationView = lazy(() => import(\"./views/RegistrationView\"));\r\nconst LoginView = lazy(() => import(\"./views/LoginView\"));\r\nconst ContactsView = lazy(() => import(\"./views/ContactsView\"));\r\n\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    this.props.onRefresh();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <AppBar />\r\n        <Suspense fallback={<p className={styles.loader}>Батя, я стараюсь!</p>}>\r\n          <Switch>\r\n            <PublicRoute exact path=\"/\" component={HomeView} />\r\n            <PublicRoute\r\n              path=\"/register\"\r\n              redirectTo=\"/contacts\"\r\n              restricted\r\n              component={RegistrationView}\r\n            />\r\n            <PublicRoute\r\n              path=\"/login\"\r\n              redirectTo=\"/contacts\"\r\n              restricted\r\n              component={LoginView}\r\n            />\r\n            <PrivateRoute\r\n              path=\"/contacts\"\r\n              redirectTo=\"/login\"\r\n              component={ContactsView}\r\n            />\r\n          </Switch>\r\n        </Suspense>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onRefresh: () => dispatch(getCurrUser()),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(App);\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport store from \"./redux/store.js\";\nimport \"./styles.css\";\n\nimport App from \"./components/App\";\nimport { PersistGate } from \"redux-persist/es/integration/react\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}